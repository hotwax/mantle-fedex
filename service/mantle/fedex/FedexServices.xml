<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

  <service verb="request" noun="ShippingLabels">
        <implements service="mantle.shipment.CarrierServices.request#ShippingLabels"/>
        <out-parameters>
            <parameter name="responseMap"/>
            <parameter name="labelRequestMap"/>
        </out-parameters>
        <actions>
            <!-- Searching FedexApiToken -->
            <entity-find-one entity-name="ShippingGatewayOption" value-field="apiTokenOpt">
                    <field-map field-name="shippingGatewayConfigId" from="shippingGatewayConfigId"/>
                    <field-map field-name="optionEnumId" value="FedexApiToken"/>
            </entity-find-one>
            <if condition="!apiTokenOpt.optionValue">
                <return type="warning"  message=" ${shippingGatewayConfigId} has no FedexApiToken, not getting rates"/>
            </if>

            <entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment" for-update="true"/>
            <if condition="shipment == null"><return error="true" message="Shipment not found with ID ${shipmentId}"/></if>
            <entity-find-one entity-name="mantle.shipment.ShipmentRouteSegment" value-field="routeSegment"/>
            <if condition="routeSegment == null">
                <return error="true" message="Shipment Route Segment not found with ID ${shipmentId}:${shipmentRouteSegmentSeqId}"/>
            </if>

            <!--If shipmentPackageSeqId present, will call service for one package, else for all packages-->
            <entity-find entity-name="mantle.shipment.ShipmentPackageRouteSeg" list="packageRouteSegList">
                <econdition field-name="shipmentId"/><econdition field-name="shipmentRouteSegmentSeqId"/>
                <econdition field-name="shipmentPackageSeqId" ignore-if-empty="true"/>
            </entity-find>

            <!-- Create ShipmentInfo Details -->
            <service-call name="mantle.fedex.FedexServices.make#ShipmentInfo" in-map="context" out-map="context"/>
            <!-- Calling FedEx service for allPackages -->
            <service-call name="mantle.fedex.FedexServices.make#ShipmentPackageInfo" out-map="request"
                in-map="[shipment:shipment, routeSegment:routeSegment, packageRouteSegList:packageRouteSegList,
                address_from:address_from, address_to:address_to, shipmentMethodEnumId:shipmentMethodEnumId]"/>
            <if condition="!request.labelRequestMap"><return/></if>
            <set field="labelRequestMap" from="request.labelRequestMap"/>
            <!-- Setting Connection With Fedex -->
            <service-call name="mantle.fedex.FedexServices.send#FedexRequest" out-map="response"
                in-map="[shippingGatewayConfigId:shippingGatewayConfigId, method:'POST',path:'ship/v1/shipments',
                contentType:'application/json', requestMap:request.labelRequestMap,
                apiTokenValue:apiTokenOpt.optionValue,xLocale:'en-US']"/>
            <set field="responseMap" from="response.responseMap"/>
            <set field="iterator" type="Integer" value="0"/>
            <iterate list="packageRouteSegList" entry="packageRouteSeg">
                <set field="packageRouteSeg.trackingCode" from="responseMap.output.transactionShipments[0].pieceResponses[iterator].trackingNumber"/>
                <set field="packageRouteSeg.labelDate" from="responseMap.output.transactionShipments[0].pieceResponses[iterator].deliveryDatestamp"/>
                <set field="packageRouteSeg.labelImage" from="responseMap.output.transactionShipments[0].pieceResponses[iterator].packageDocuments[0].encodedLabel"/>
                <entity-update value-field="packageRouteSeg"/>
                <script>iterator=iterator+1</script>
            </iterate>
        </actions>
    </service>
    <service verb="make" noun="ShipmentInfo">
       <in-parameters>
           <parameter name="shipmentId" required="true"/>
           <parameter name="shipmentRouteSegmentSeqId" required="true"/>
           <parameter name="shippingGatewayConfigId" required="true"/>
           <parameter name="shipment" type="EntityValue" required="true"/>
           <parameter name="routeSegment" type="EntityValue" required="true"/>
           <parameter name="shipmentMethodEnumId"/>
       </in-parameters>
       <out-parameters>
           <parameter name="address_from" type="Map"/>
           <parameter name="address_to" type="Map"/>
           <parameter name="shipmentMethodEnumId"/>
       </out-parameters>
       <actions>

           <!--Searching Origin and Dest PostalAddress-->
           <entity-find-one entity-name="PostalAddress" value-field="originPostalAddress">
               <field-map field-name="contactMechId" from="routeSegment.originPostalContactMechId"></field-map>
           </entity-find-one>
           <entity-find-one entity-name="PostalAddress" value-field="destPostalAddress">
               <field-map field-name="contactMechId" from="routeSegment.destPostalContactMechId"></field-map>
           </entity-find-one>

           <!--Searching Origin and Dest  Organization -->
           <entity-find-one entity-name="Organization" value-field="originOrganization">
               <field-map field-name="partyId" from="shipment.fromPartyId"></field-map>
           </entity-find-one>
           <entity-find-one entity-name="Organization" value-field="destOrganization">
               <field-map field-name="partyId" from="shipment.toPartyId"></field-map>
           </entity-find-one>

           <!--Searching Origin and Dest TelecomNumber -->
           <entity-find-one entity-name="TelecomNumber" value-field="originNumber">
               <field-map field-name="contactMechId" from="routeSegment.originTelecomContactMechId"></field-map>
           </entity-find-one>
           <entity-find-one entity-name="TelecomNumber" value-field="destNumber">
               <field-map field-name="contactMechId" from="routeSegment.destTelecomContactMechId"></field-map>
           </entity-find-one>

           <!--Searching Origin and Dest of Organization -->
           <entity-find-one entity-name="Person" value-field="originPerson">
               <field-map field-name="partyId" from="shipment.fromPartyId"></field-map>
           </entity-find-one>
           <entity-find-one entity-name="Person" value-field="destPerson">
               <field-map field-name="partyId" from="shipment.toPartyId"></field-map>
           </entity-find-one>

           <!-- Searching Country and State/Province Code -->
           <entity-find-one entity-name="Geo" value-field="originGeoStateProvinceData">
               <field-map field-name="geoId" from="originPostalAddress.stateProvinceGeoId"/>
               <select-field field-name="geoCodeAlpha2"/>
           </entity-find-one>
           <entity-find-one entity-name="Geo" value-field="originGeoCountryData">
               <field-map field-name="geoId" from="originPostalAddress.countryGeoId"/>
               <select-field field-name="geoCodeAlpha2"/>
           </entity-find-one>
           <entity-find-one entity-name="Geo" value-field="destGeoStateProvinceData">
               <field-map field-name="geoId" from="destPostalAddress.stateProvinceGeoId"/>
               <select-field field-name="geoCodeAlpha2"/>
           </entity-find-one>
           <entity-find-one entity-name="Geo" value-field="destGeoCountryData">
               <field-map field-name="geoId" from="destPostalAddress.countryGeoId"/>
               <select-field field-name="geoCodeAlpha2"/>
           </entity-find-one>

           <!-- Extracting ShipmentMethod/ServiceType details-->
           <set field="shipmentMethodEnumId" from="shipmentMethodEnumId ?: routeSegment.shipmentMethodEnumId"/>
           <if condition="!shipmentMethodEnumId">
               <return type="danger" message="In get#ShippingLabel Service, no shipmentMethod available."/>
           </if>

           <!-- Address details for requestMap -->
           <set field="saddress" from="[streetLines:[originPostalAddress.address1], city:originPostalAddress.city,
                 stateOrProvinceCode:originGeoStateProvinceData.geoCodeAlpha2, postalCode:originPostalAddress.postalCode,
                 countryCode:originGeoCountryData.geoCodeAlpha2]" type="NewMap"/>
           <set field="scontact" from="[personName:originPerson.firstName, phoneNumber:destNumber.contactNumber,
                 companyName:originOrganization.organizationName]" type="NewMap"/>
           <set field="raddress" from="[streetLines:[destPostalAddress.address1, destPostalAddress.address2],
                 city:destPostalAddress.city, stateOrProvinceCode:destGeoStateProvinceData.geoCodeAlpha2,
                 postalCode:destPostalAddress.postalCode, countryCode:destGeoCountryData.geoCodeAlpha2]" type="NewMap"/>
           <set field="rcontact" from="[personName:destPerson.firstName, phoneNumber:destNumber.contactNumber,
                 companyName:destOrganization.organizationName]" type="NewMap"/>

           <!-- Storing Sender and Receiver's Address -->
           <set field='address_from' from="[contact:scontact,address:saddress]" type="NewMap"/>
           <set field='address_to' from="[contact:rcontact,address:raddress]" type="NewMap"/>

       </actions>
    </service>
    <service verb="make" noun="ShipmentPackageInfo">
        <in-parameters>
            <parameter name="packageRouteSegList" type="List" required="true"/>
            <parameter name="routeSegment" type="EntityValue" required="true"/>
            <parameter name="shipment" type="EntityValue" required="true"/>
            <parameter name="address_from" type="Map" required="true"/>
            <parameter name="address_to" type="Map" required="true"/>
            <parameter name="shipmentMethodEnumId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="labelRequestMap" type="Map"/>
        </out-parameters>
        <actions>

            <set field="shippingGatewayConfigId" from="routeSegment.shippingGatewayConfigId"/>
            <!--Extracting Info For Labels -->
            <entity-find-one entity-name="ShippingGatewayOption" value-field="labelFormat">
                <field-map field-name="shippingGatewayConfigId" from="shippingGatewayConfigId"/>
                <field-map field-name="optionEnumId" value="FedexLabelFormatType"/>
            </entity-find-one>
            <entity-find-one entity-name="ShippingGatewayOption" value-field="labelImage">
                <field-map field-name="shippingGatewayConfigId" from="shippingGatewayConfigId"/>
                <field-map field-name="optionEnumId" value="FedexLabelImageType"/>
            </entity-find-one>
            <entity-find-one entity-name="ShippingGatewayOption" value-field="labelStock">
                <field-map field-name="shippingGatewayConfigId" from="shippingGatewayConfigId"/>
                <field-map field-name="optionEnumId" value="FedexLabelStockType"/>
            </entity-find-one>

            <!-- Collecting details for labelRequestMap -->
            <set field="shippingChargesPayment" from="[paymentType:'SENDER']" type="NewMap"/>
            <set field="labelSpecification" from="[imageType:labelImage.optionValue,
                 labelStockType:labelStock.optionValue, labelFormatType:labelFormat.optionValue]" type="NewMap"/>

            <!-- Calling FedEx service for everyPackage -->
            <set field="requestedPackageLineItems" from="[]"/>
            <iterate list="packageRouteSegList" entry="packageRouteSeg">
                <!-- Package details -->
                <set field="shipmentId" from="packageRouteSeg.shipmentId"/>
                <set field="shipmentRouteSegmentSeqId" from="packageRouteSeg.shipmentRouteSegmentSeqId"/>
                <set field="shipmentPackageSeqId" from="packageRouteSeg.shipmentPackageSeqId"/>
                <!-- Extracting BoxType -->
                <entity-find-one entity-name="ShipmentPackage" value-field="shipmentPackage">
                    <field-map field-name="shipmentId" from="shipmentId"/>
                    <field-map field-name="shipmentPackageSeqId" from="shipmentPackageSeqId"/>
                </entity-find-one>
                <entity-find-one entity-name="mantle.shipment.ShipmentPackage" value-field="shipmentPackage"/>
                <!-- dimensions -->
                <entity-find-one entity-name="mantle.shipment.ShipmentBoxType" value-field="boxType">
                    <field-map field-name="shipmentBoxTypeId" from="shipmentPackage.shipmentBoxTypeId"/></entity-find-one>
                <if condition="boxType == null"><message>Package has no box type, skipping</message><return/></if>
                <if condition="!boxType.boxLength || !boxType.boxWidth || !boxType.boxHeight">
                    <message>Box type ${boxType.shipmentBoxTypeId} is missing dimensions (length, width, height) or dimensionUomId, s
                        kipping package</message><return/>
                </if>
                <entity-find-one entity-name="moqui.basic.Uom" value-field="dimensionUom">
                    <field-map field-name="uomId" from="boxType.dimensionUomId ?: 'LEN_in'"/></entity-find-one>
                <if condition="!(dimensionUom.abbreviation in ['in', 'cm'])">
                    <message>Package ${shipmentPackageSeqId} box type ${boxType.shipmentBoxTypeId} dimension unit is '${distance_unit}',
                        must be one of: 'cm', 'in'; skipping package</message>
                    <return/>
                </if>
                <!-- weight -->
                <entity-find-one entity-name="moqui.basic.Uom" value-field="weightUom">
                    <field-map field-name="uomId" from="shipmentPackage.weightUomId ?: 'WT_lb'"/></entity-find-one>
                <if condition="!(weightUom.abbreviation in ['lb', 'kg'])">
                    <message>Package ${shipmentPackageSeqId} box type ${boxType.shipmentBoxTypeId} weight unit is '${mass_unit}',
                        must be one of: 'lb', 'kg'; skipping package</message>
                    <return/>
                </if>
                <set field="weight" from="[units:weightUom.abbreviation=='kg'?'KG':'LB',value:shipmentPackage.weight]"/>
                <set field="dimensions" from="[length:boxType.boxLength,width:boxType.boxWidth,height:boxType.boxHeight,
                units:dimensionUom.abbreviation=='in'?'IN':'CM']"/>
                <set field="requestedPackage" from="[weight:weight,dimensions:dimensions]" type="NewMap"/>
                <script>requestedPackageLineItems.add(requestedPackage)</script>
            </iterate>
            <set field="requestedShipment" from= "[shipper:address_from, recipients:[address_to],
                serviceType:shipmentMethodEnumId, packagingType:shipmentPackage.shipmentBoxTypeId, pickupType:'USE_SCHEDULED_PICKUP',
                shippingChargesPayment:shippingChargesPayment,labelSpecification:labelSpecification,
                requestedPackageLineItems:requestedPackageLineItems]" type="NewMap"/>

            <entity-find-one entity-name="ShipmentGatewayFedex" value-field="fedexGtwy">
                <field-map field-name="shippingGatewayConfigId" from="shippingGatewayConfigId"/>
            </entity-find-one>
            <set field="accountNumber" from="[value:fedexGtwy.accountNumber]" type="NewMap"/>

            <!-- Creating labelRequestMap -->
            <set field="labelRequestMap" from="[labelResponseOptions:'LABEL', requestedShipment:requestedShipment,
                accountNumber:accountNumber]" type="NewMap"/>
        </actions>
    </service>
</services>
