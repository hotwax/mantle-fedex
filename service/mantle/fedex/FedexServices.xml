<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

        <!--RateAndTrasitTime Service-->
        <service verb="get" noun="OrderShippingRate">
            <description>Remove accountNumber tag, it will be automatically added.</description>
            <in-parameters>
                <parameter name="requestMap" required="true"/>
            </in-parameters>
            <out-parameters>
                <parameter name="responseMap" required="true"/>
            </out-parameters>
            <actions>

                <log message="============${requestMap}=============="/>

                <!--Hard Coded Url-->
                <set field="connectUrl" value="https://apis-sandbox.fedex.com/rate/v1/rates/quotes"/>

                <!--Returns fedexApiToken and tokenType-->
                <service-call name="mantle.fedex.FedexServices.set#FedexApiToken" out-map="fedexTokenDetails"/>

                <!--Check if Token Credentials Are added or not-->
                <if condition="fedexTokenDetails==null">
                    <log message="=============Fedex Access Token Credentials not available.=============="/>
                    <return/>
                </if>

                <script><![CDATA[
                      import org.moqui.util.RestClient;
                      import groovy.json.JsonSlurper;
                         def connectUrl=connectUrl;
                         RestClient restClient = ec.service.rest()
                         restClient.method("POST")
                         restClient.uri(connectUrl)
                         restClient.contentType("application/json")
                         restClient.addHeader("x-locale","en-US")
                         restClient.addHeader("Authorization", "${fedexTokenDetails.tokenType} ${fedexTokenDetails.fedexApiToken}")
                         restClient.addHeader("Content-Type", "application/json")
                         restClient.jsonObject(requestMap)
                         RestClient.RestResponse restResponse = restClient.call()
                         /*Checking Response Code is not verified yet*/
                         if (restResponse.statusCode < 200 || restResponse.statusCode > 300) {
                            errMsgMap = (Map) new JsonSlurper().parseText(restResponse.text())
                            ec.logger.warn(restResponse.text())
                            return responseMap
                        }
                        /*Storing response of API in responseMap*/
                        responseMap = restResponse.jsonObject()
                      ]]>
                </script>
                <log message="============ResponseMap: ${responseMap}=============="/>
               <!-- <iterate list="responseMap" entry="value">
                    <set field="responseMapContent" from="[responseMapContent]"
                </iterate>-->
                
                <!--Extracting Details of Response Map-->
                <log message="============ResponseMapContent: ${responseMapContent}=============="/>
                <iterate list="responseMap" entry="tags">
                    <if condition="tags.key=='output'"><then>
                        <iterate list="tags.value" entry="outputTags">
                             <log message="========== OutputTags: ${outputTags.key} and value ${outputTags.value}======="/>
                        </iterate>
                    </then>
                    <else>
                        <log message="========== Tags: ${tags.key} and value ${tags.value}======="/>
                    </else></if>
                </iterate>
            </actions>
        </service>
</services>